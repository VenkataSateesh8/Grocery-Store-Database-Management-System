-- Analysis Questions

-- 1️. Customer Insights: Gain an understanding of customer engagement and purchasing behavior.
-- How many unique customers have placed orders?
select count(distinct  Customer_ID) as unique_costumers 
from orders;

-- Which customers have placed the highest number of orders?
SELECT c.customer_name, COUNT(o.order_id) AS order_count
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.customer_name
ORDER BY order_count DESC;

-- What is the total and average purchase value per customer?
SELECT c.customer_name, 
       SUM(od.total_price) AS total_purchase,
       AVG(od.total_price) AS avg_purchase
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
GROUP BY c.customer_id, c.customer_name;

-- Who are the top 5 customers by total purchase amount?
SELECT c.customer_name, SUM(od.total_price) AS total_purchase
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
GROUP BY c.customer_id, c.customer_name
ORDER BY total_purchase DESC
LIMIT 5;


-- 2. Product Performance: Evaluate how well products are performing in terms of sales and revenue.
-- How many products exist in each category?
SELECT cat.category_name, COUNT(p.product_id) AS product_count
FROM categories cat
LEFT JOIN products p ON cat.category_id = p.category_id
GROUP BY cat.category_id, cat.category_name;

-- What is the average price of products by category?
SELECT cat.category_name, AVG(p.price) AS avg_price
FROM categories cat
JOIN products p ON cat.category_id = p.category_id
GROUP BY cat.category_id, cat.category_name;

-- Which products have the highest total sales volume (by quantity)?
SELECT p.product_name, SUM(od.quantity) AS total_quantity_sold
FROM products p
JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_id, p.product_name
ORDER BY total_quantity_sold DESC;

-- What is the total revenue generated by each product?
SELECT p.product_name, SUM(od.total_price) AS total_revenue
FROM products p
JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_id, p.product_name
ORDER BY total_revenue DESC;

-- How do product sales vary by category and supplier?
SELECT cat.category_name, s.supplier_name, 
       SUM(od.quantity) AS total_quantity,
       SUM(od.total_price) AS total_revenue
FROM categories cat
JOIN products p ON cat.category_id = p.category_id
JOIN supplier s ON p.supplier_id = s.supplier_id
JOIN order_details od ON p.product_id = od.product_id
GROUP BY cat.category_id, cat.category_name, s.supplier_id, s.supplier_name
ORDER BY total_revenue DESC;


-- 3. Sales and Order Trends: Analyze business performance through orders and revenue over time.
-- How many orders have been placed in total?
SELECT COUNT(*) AS total_orders 
FROM orders;

-- What is the average value per order?
SELECT AVG(order_total) AS avg_order_value
FROM (
    SELECT o.order_id, SUM(od.total_price) AS order_total
    FROM orders o
    JOIN order_details od ON o.order_id = od.order_id
    GROUP BY o.order_id
) AS order_totals;

-- On which dates were the most orders placed?
SELECT order_date, COUNT(*) AS order_count
FROM orders
GROUP BY order_date
ORDER BY order_count DESC;

-- What are the monthly trends in order volume and revenue?
SELECT DATE_FORMAT(STR_TO_DATE(order_date, '%Y-%m-%d'), '%Y-%m') AS month,
       COUNT(DISTINCT o.order_id) AS order_count,
       SUM(od.total_price) AS total_revenue
FROM orders o
JOIN order_details od ON o.order_id = od.order_id
GROUP BY month
ORDER BY month;

-- How do order patterns vary across weekdays and weekends?
SELECT 
    CASE 
        WHEN DAYOFWEEK(STR_TO_DATE(order_date, '%Y-%m-%d')) IN (1,7) THEN 'Weekend'
        ELSE 'Weekday'
    END AS day_type,
    COUNT(*) AS order_count,
    SUM(od.total_price) AS total_revenue
FROM orders o
JOIN order_details od ON o.order_id = od.order_id
GROUP BY day_type;


-- 4️. Supplier Contribution: Identify the most active and profitable suppliers.
-- How many suppliers are there in the database?
SELECT COUNT(*) AS supplier_count 
FROM supplier;

-- Which supplier provides the most products?
SELECT s.supplier_name, COUNT(p.product_id) AS product_count
FROM supplier s
LEFT JOIN products p ON s.supplier_id = p.supplier_id
GROUP BY s.supplier_id, s.supplier_name
ORDER BY product_count DESC;

-- What is the average price of products from each supplier?
SELECT s.supplier_name, AVG(p.price) AS avg_price
FROM supplier s
JOIN products p ON s.supplier_id = p.supplier_id
GROUP BY s.supplier_id, s.supplier_name;

-- Which suppliers contribute the most to total product sales (by revenue)?
SELECT s.supplier_name, SUM(od.total_price) AS total_revenue
FROM supplier s
JOIN products p ON s.supplier_id = p.supplier_id
JOIN order_details od ON p.product_id = od.product_id
GROUP BY s.supplier_id, s.supplier_name
ORDER BY total_revenue DESC;


-- 5️. Employee Performance: Assess how employees are handling and influencing sales.
-- How many employees have processed orders?
SELECT COUNT(DISTINCT employee_id) AS active_employees 
FROM orders;

-- Which employees have handled the most orders?
SELECT e.employee_name, COUNT(o.order_id) AS orders_handled
FROM employees e
JOIN orders o ON e.employee_id = o.employee_id
GROUP BY e.employee_id, e.employee_name
ORDER BY orders_handled DESC;

-- What is the total sales value processed by each employee?
SELECT e.employee_name, SUM(od.total_price) AS total_sales
FROM employees e
JOIN orders o ON e.employee_id = o.employee_id
JOIN order_details od ON o.order_id = od.order_id
GROUP BY e.employee_id, e.employee_name
ORDER BY total_sales DESC;

-- What is the average order value handled per employee?
SELECT e.employee_name, 
       AVG(order_totals.order_total) AS avg_order_value
FROM employees e
JOIN orders o ON e.employee_id = o.employee_id
JOIN (
    SELECT order_id, SUM(total_price) AS order_total
    FROM order_details
    GROUP BY order_id
) AS order_totals ON o.order_id = order_totals.order_id
GROUP BY e.employee_id, e.employee_name;


-- 6️. Order Details Deep Dive: Explore item-level sales patterns and pricing behavior.
-- What is the relationship between quantity ordered and total price?
SELECT quantity, AVG(total_price) AS avg_total_price
FROM order_details
GROUP BY quantity
ORDER BY quantity;

-- What is the average quantity ordered per product?
SELECT p.product_name, AVG(od.quantity) AS avg_quantity
FROM products p
JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_id, p.product_name;

-- How does the unit price vary across products and orders?
SELECT p.product_name, 
       MIN(od.each_price) AS min_price,
       MAX(od.each_price) AS max_price,
       AVG(od.each_price) AS avg_price
FROM products p
JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_id, p.product_name;
